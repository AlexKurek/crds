#! /usr/bin/env pysh
#-*-python-*-
# requires CRDS install for pysh

import re

from crds import pysh

# -----------------------------------------------------------------

def rewrite(filename, regex, replacement):
    with open(filename) as file:
        contents = file.read()
        contents = re.sub(regex, replacement, contents)
    with open(filename, "w+") as file:
        file.write(contents)

def main():
    
    pysh.usage("<x.y.z>  'rationale for this version.'", 2, 2, """

Save the semantic version number and rationale string within the
necessary CRDS source code files.

This script is run as part of development closeout and requires
CRDS to be installed.  It is not run during setup.

""")

    semantic_version = pysh.arg(1)
    rationale = pysh.arg(2)

    with open("crds/core/git_version.py", "w+") as file:
        git_version = pysh.out("git show -s --pretty=\\%h").strip()
        git_branch = pysh.out("git rev-parse --abbrev-ref HEAD").strip()
        git_sha1 = pysh.out("git show -s --pretty=\\%h").strip()
        file.write(f"""

__version__ = '{git_version}'

__full_version_info__ = '''
branch: {git_branch}
sha1: {git_sha1}
'''
    """)

    rewrite("setup.py", 
            r"version\s*=\s*'\d+\.\d+\.\d+'",
            f"version = '{semantic_version}'")
    
    rewrite("setup.cfg", 
            r'version\s*=\s*\d+\.\d+\.\d+',
            f"version = {semantic_version}")

    rewrite("crds/__init__.py",
            r"__version__\s*=\s*\"(\d+\.\d+\.\d+)\"",
            f'__version__ = "{semantic_version}"')

    rewrite("crds/__init__.py",
            r'__rationale__\s*=\s*"(\w|\s|[-,.%$&*()!@#~])+"',
            f'__rationale__ = "{rationale}"')

# -----------------------------------------------------------------

if __name__ == "__main__":
    main()
